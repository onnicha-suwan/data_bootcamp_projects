library(tidyverse)
library(sqldf)
library(glue)

#explore dataframe
mtcars
# 6 rows(default) (table , number of row)
head(mtcars,3)
tail(mtcars,2)

glimpse(mtcars)

#sql 

sqldf("select * from mtcars where mpg >30")
sqldf("select mpg,wt,hp from mtcars where wt <2 ")
sqldf("select am,avg(mpg),sum(mpg) from mtcars group by am")
 
# glue
# string templete

my_name <- "toy"
my_age <- 34

paste("Hello my name is", my_name,", and I'm ", my_age, "years old.")

glue("Hello my name is {my_name}, and I'm {my_age} years old.")

#tidyverse
#dplyr => data transformation
# 1. select
# 2. filter
# 3. mutate
# 4. arrange
# 5. summarise + group by


# select column
select(mtcars,mpg,hp,wt)
select(mtcars,wt,hp,mpg,am)
select(mtcars,contains("a"))
select(mtcars,starts_with("a"))
select(mtcars,ends_with("p"))
select(mtcars,1,3,5)
select(mtcars,1:5,am)
select(mtcars,1:3)
select(mtcars,mpg:disp)
# or use pipe operator 
mtcars %>%
  select(mpg,hp,wt) %>%
  filter(mpg>30)


mtcars %>%
  select(mpg,hp,wt) %>%
  filter(mpg > 30 & hp >100)

mtcars %>%
  select(mpg,hp,wt) %>%
  filter(mpg > 30 & hp >100) %>%
  rownames()
  
mtcars %>%
  select(mpg,hp,wt) %>%
  filter(hp > 100) %>%
  rownames()

mtcars %>%
  select(mpg,hp,wt,am) %>%
  filter(mpg >30 & am == 1)

mtcars %>%
  select(mpg,hp,wt,am) %>%
  filter(mpg >30 | am == 1) 

mtcars %>%
  rownames_to_column() %>%
  select(model = rowname,
         milePerGallon = mpg,
         horsePower = hp,
         weight = wt) %>%
  head()

mtcars <- mtcars %>%
  rownames_to_column()
  
mtcars <- mtcars %>%
  rename(model = rowname)

# filter model name
mtcars %>%
  select(model,mpg,hp,wt) %>%
  filter(grepl("^M",model))

#mutate create new columns
df <- mtcars %>%
  select(model,mpg,hp) %>%
  head() %>%
  mutate(mpg_double=mpg*2,
         mpg_log = log(mpg),
         hp_double = hp*2)

# arrange sort data
mtcars %>%
  select(model,mpg,am) %>%
  arrange(am,desc(mpg))

# create label
# am (0=auto,1 = manual)

mtcars <- mtcars %>%
  mutate(am = ifelse(am==0,"Auto","Manual"))

# create dataframe from scratch
df <- data.frame(
  id = 1:5,
  country = c("Thailand","Korea","Japan",
              "USA","Belgium")
)

df %>%
  mutate(region = case_when(
    country %in% c("Thailand","Korea","Japan") ~ "Asia",
    country %in% "USA" ~ "America",
    country %in% "Belgium" ~ "Europe"
              
  ))

df %>%
  mutate(region = case_when(
    country %in% c("Thailand","Korea","Japan") ~ "Asia",
    country %in% "USA" ~ "America",
    TRUE ~ "Other Regions"
    
  ))

df2 <- data.frame(id = 6:8,
                  country = c("Germany","Italy","Sweden"))

full_df <- df %>% bind_rows(df2)

df3 <- data.frame(id = 9:10,
                  country = c("Canada","Malaysia"))
df %>%
  bind_rows(df2) %>%
  bind_rows(df3)
# or
list_df <- list(df,df2,df3)
full_df <- bind_rows(list_df)
#case when in sql
sqldf("select *, case 
      when country in ('USA','Canada') then 'America'
      when country in ('Thailand','Korea','Japan','Malaysia') then 'Asia'
      else 'Europe'
      end as region
      from full_df
      ")
# case when in R
full_df %>% 
  mutate(region = case_when(
    country %in%  c("Thailand","Korea","Japan","Malaysia") ~ "Asia",
    country %in%  c("Canada","USA") ~ "America",
    TRUE ~ "Europe"
  ))


# summarise + group by
# = aggregate function in sql
# n = n() count
mtcars %>%
  group_by(am) %>%
  summarise(avg_mpg = mean(mpg),
            sum_mpg = sum(mpg),
            min_mpg = min(mpg),
            max_mpg = max(mpg),
            n = n())
result <- mtcars %>%
  mutate(vs = ifelse(vs==0,"V-shaped","straight")) %>%
  group_by(am,vs) %>%
  summarise(avg_mpg = mean(mpg),
            sum_mpg = sum(mpg),
            min_mpg = min(mpg),
            max_mpg = max(mpg),
            n=n())
            
         
view(result)
write_csv(result,"result.csv")
read_csv("result.csv")

#missing value
# get original df
data("mtcars")
#write
#row,column
mtcars[5,1] <- NA  
mtcars %>%
  select(mpg,hp,wt) %>%
  filter(is.na(mpg))
# get all excecpt na
mtcars %>%
  select(mpg,hp,wt) %>%
  filter(!is.na(mpg))
# replace na by using avg
#brfore find avg have to rm
# 2 solution
mtcars %>%
  summarise(avg_mpg = mean(mpg,na.rm = TRUE))
# or
mtcars %>%
  filter(!is.na(mpg)) %>%
  summarise(avg_mpg = mean(mpg))
# replace
# pull only value not column name
mean_mpg <- mtcars %>%
  summarise(mean(mpg,na.rm = TRUE)) %>%
  pull()
mean_mpg
mtcars %>%
  select(mpg) %>%
  mutate(mpg2 = replace_na(mpg,mean_mpg))





# loop over df

data("mtcars")
mtcars
for (i in 1:ncol(mtcars)) {
  print(mean(mtcars[[i]]))
}
#or (easier)
apply(mtcars,2,mean)
apply(mtcars,2,max)


#join dataframe
#standard joins in sql
# inner left right full



band_members
band_instruments
left_join(band_members,band_instruments)
left_join(band_members,band_instruments, by="name")

# or
band_members %>%
  left_join(band_instruments ,by="name")
band_members %>%
  inner_join(band_instruments ,by="name")
band_members %>%
  right_join(band_instruments ,by="name")
band_members %>%
  full_join(band_instruments ,by="name")
#assume
band_members %>%
  rename(memberName = name) -> band_member2
# when name not match
band_member2 %>%
  left_join(band_instruments,by = c("memberName"="name"))

library(nycflights13)
glimpse(flights)
airlines

flights %>%
  filter(year==2013 & month ==9) %>%
  count(carrier) %>%
  arrange(desc(n)) %>%
  head(5) %>%
  left_join(airlines,by="carrier")
  

library(rvest)
library(tidyverse)

url <-"https://www.imdb.com/search/title/?groups=top_100&sort=user_rating,desc"

movie_name <- url %>%
  read_html() %>%
  html_nodes("h3.lister-item-header") %>%
  html_text2()



movie_genre <- url %>%
  read_html() %>%
  html_nodes("span.genre") %>%
  html_text2()

ratings <- url %>%
  read_html() %>%
  html_nodes("div.ratings-imdb-rating") %>%
  html_text2() %>%
  as.numeric()

imdb_df <- data.frame(
  movie_name,
  movie_genre,
  ratings
)

